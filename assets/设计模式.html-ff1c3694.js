const e=JSON.parse('{"key":"v-cbb8c978","path":"/docs/cpp%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","title":"设计模式","lang":"zh-CN","frontmatter":{"title":"设计模式","icon":"edit","author":{"name":"ekskei","url":"https://github.com/ekskei"},"date":"2019-03-02T00:00:00.000Z","category":["C/C++"],"tag":["设计模式"],"description":"设计模式 设计模式简介 设计模式（Design Patterns），就是设计过程中可以反复使用的、可以解决特定问题的设计方法。 在 1994 年，由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 四人合著出版了一本名为 Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素） 的书，该书首次提到了软件开发中设计模式的概念。 四位作者合称 GOF（四人帮，全拼 Gang of Four）。他们所提出的设计模式主要是基于以下的面向对象设计原则：对接口编程而不是对实现编程，优先使用对象组合而不是继承。","head":[["meta",{"property":"og:url","content":"https://codevk.com/docs/cpp%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"CODEVK"}],["meta",{"property":"og:title","content":"设计模式"}],["meta",{"property":"og:description","content":"设计模式 设计模式简介 设计模式（Design Patterns），就是设计过程中可以反复使用的、可以解决特定问题的设计方法。 在 1994 年，由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 四人合著出版了一本名为 Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素） 的书，该书首次提到了软件开发中设计模式的概念。 四位作者合称 GOF（四人帮，全拼 Gang of Four）。他们所提出的设计模式主要是基于以下的面向对象设计原则：对接口编程而不是对实现编程，优先使用对象组合而不是继承。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-27T15:18:47.000Z"}],["meta",{"property":"article:author","content":"ekskei"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2019-03-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-27T15:18:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-27T15:18:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ekskei\\",\\"url\\":\\"https://github.com/ekskei\\"}]}"]]},"headers":[{"level":2,"title":"设计模式简介","slug":"设计模式简介","link":"#设计模式简介","children":[]},{"level":2,"title":"设计模式七大原则","slug":"设计模式七大原则","link":"#设计模式七大原则","children":[{"level":3,"title":"开闭原则（Open Close Principle）","slug":"开闭原则-open-close-principle","link":"#开闭原则-open-close-principle","children":[]},{"level":3,"title":"里氏代换原则（Liskov Substitution Principle）","slug":"里氏代换原则-liskov-substitution-principle","link":"#里氏代换原则-liskov-substitution-principle","children":[]},{"level":3,"title":"依赖倒转原则（Dependence Inversion Principle）","slug":"依赖倒转原则-dependence-inversion-principle","link":"#依赖倒转原则-dependence-inversion-principle","children":[]},{"level":3,"title":"接口隔离原则（Interface Segregation Principle）","slug":"接口隔离原则-interface-segregation-principle","link":"#接口隔离原则-interface-segregation-principle","children":[]},{"level":3,"title":"迪米特法则，又称最少知道原则（Demeter Principle）","slug":"迪米特法则-又称最少知道原则-demeter-principle","link":"#迪米特法则-又称最少知道原则-demeter-principle","children":[]},{"level":3,"title":"合成复用原则（Composite Reuse Principle）","slug":"合成复用原则-composite-reuse-principle","link":"#合成复用原则-composite-reuse-principle","children":[]},{"level":3,"title":"单一职责原则（Single responsibility principle）","slug":"单一职责原则-single-responsibility-principle","link":"#单一职责原则-single-responsibility-principle","children":[]}]},{"level":2,"title":"设计模式分类","slug":"设计模式分类","link":"#设计模式分类","children":[{"level":3,"title":"从目的对模式分类","slug":"从目的对模式分类","link":"#从目的对模式分类","children":[]},{"level":3,"title":"从封装变化角度对模式分类","slug":"从封装变化角度对模式分类","link":"#从封装变化角度对模式分类","children":[]}]}],"git":{"createdTime":1677598644000,"updatedTime":1679930327000,"contributors":[{"name":"ekskei","email":"837866535@qq.com","commits":2}]},"readingTime":{"minutes":4.17,"words":1250},"filePathRelative":"docs/cpp笔记/设计模式.md","localizedDate":"2019年3月2日","excerpt":"<h1> 设计模式</h1>\\n<h2> 设计模式简介</h2>\\n<p>设计模式（Design Patterns），就是设计过程中可以反复使用的、可以解决特定问题的设计方法。</p>\\n<p>在 1994 年，由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 四人合著出版了一本名为 Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素） 的书，该书首次提到了软件开发中设计模式的概念。</p>\\n<p>四位作者合称 GOF（四人帮，全拼 Gang of Four）。他们所提出的设计模式主要是基于以下的面向对象设计原则：对接口编程而不是对实现编程，优先使用对象组合而不是继承。</p>","autoDesc":true}');export{e as data};
