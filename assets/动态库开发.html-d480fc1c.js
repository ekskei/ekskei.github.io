const e=JSON.parse('{"key":"v-705f3b7f","path":"/docs/cpp%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E5%BA%93%E5%BC%80%E5%8F%91.html","title":"动态库开发","lang":"zh-CN","frontmatter":{"title":"动态库开发","icon":"edit","author":{"name":"ekskei","url":"https://github.com/ekskei"},"date":"2023-03-30T00:00:00.000Z","category":["C/C++"],"tag":["库"],"description":"动态库开发 动态库是一种可以在程序运行时被动态加载的共享库，它包含了一组函数和数据，可以被多个程序共享使用，在C/C++代码重用和模块化开发中有着广泛的应用。动态库通常采用共享对象文件（.so）或者动态链接库文件（.dll）的格式存储在磁盘上。本文将介绍动态库的开发方法以及注意事项，帮助了解如何编写高质量的动态库。 导出函数 编写要导出的函数时，需要使用特殊的关键字和修饰符来标识它们是动态库的导出函数。 例如，在Linux系统下，可以使用__attribute__((visibility(\\"default\\")))修饰符来标识：","head":[["meta",{"property":"og:url","content":"https://codevk.com/docs/cpp%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E5%BA%93%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"CODEVK"}],["meta",{"property":"og:title","content":"动态库开发"}],["meta",{"property":"og:description","content":"动态库开发 动态库是一种可以在程序运行时被动态加载的共享库，它包含了一组函数和数据，可以被多个程序共享使用，在C/C++代码重用和模块化开发中有着广泛的应用。动态库通常采用共享对象文件（.so）或者动态链接库文件（.dll）的格式存储在磁盘上。本文将介绍动态库的开发方法以及注意事项，帮助了解如何编写高质量的动态库。 导出函数 编写要导出的函数时，需要使用特殊的关键字和修饰符来标识它们是动态库的导出函数。 例如，在Linux系统下，可以使用__attribute__((visibility(\\"default\\")))修饰符来标识："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-31T15:28:28.000Z"}],["meta",{"property":"article:author","content":"ekskei"}],["meta",{"property":"article:tag","content":"库"}],["meta",{"property":"article:published_time","content":"2023-03-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-31T15:28:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态库开发\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-31T15:28:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ekskei\\",\\"url\\":\\"https://github.com/ekskei\\"}]}"]]},"headers":[{"level":2,"title":"导出函数","slug":"导出函数","link":"#导出函数","children":[]},{"level":2,"title":"使用 extern \\"C\\"","slug":"使用-extern-c","link":"#使用-extern-c","children":[]},{"level":2,"title":"编译源文件","slug":"编译源文件","link":"#编译源文件","children":[]},{"level":2,"title":"动态加载和编译时链接","slug":"动态加载和编译时链接","link":"#动态加载和编译时链接","children":[]},{"level":2,"title":"链接动态库","slug":"链接动态库","link":"#链接动态库","children":[]},{"level":2,"title":"使用动态库","slug":"使用动态库","link":"#使用动态库","children":[]},{"level":2,"title":"动态库路径规范","slug":"动态库路径规范","link":"#动态库路径规范","children":[{"level":3,"title":"编译链接时指定动态库路径","slug":"编译链接时指定动态库路径","link":"#编译链接时指定动态库路径","children":[]},{"level":3,"title":"使用-rpath参数","slug":"使用-rpath参数","link":"#使用-rpath参数","children":[]}]},{"level":2,"title":"使用CMake构建动态库","slug":"使用cmake构建动态库","link":"#使用cmake构建动态库","children":[]},{"level":2,"title":"使用CMake链接动态库","slug":"使用cmake链接动态库","link":"#使用cmake链接动态库","children":[]},{"level":2,"title":"相关技巧","slug":"相关技巧","link":"#相关技巧","children":[{"level":3,"title":"查看版本号","slug":"查看版本号","link":"#查看版本号","children":[]},{"level":3,"title":"查看被依赖项","slug":"查看被依赖项","link":"#查看被依赖项","children":[]}]}],"git":{"createdTime":1680276508000,"updatedTime":1680276508000,"contributors":[{"name":"ekskei","email":"837866535@qq.com","commits":1}]},"readingTime":{"minutes":8.71,"words":2614},"filePathRelative":"docs/cpp笔记/动态库开发.md","localizedDate":"2023年3月30日","excerpt":"<h1> 动态库开发</h1>\\n<p>动态库是一种可以在程序运行时被动态加载的共享库，它包含了一组函数和数据，可以被多个程序共享使用，在C/C++代码重用和模块化开发中有着广泛的应用。动态库通常采用共享对象文件（.so）或者动态链接库文件（.dll）的格式存储在磁盘上。本文将介绍动态库的开发方法以及注意事项，帮助了解如何编写高质量的动态库。</p>\\n<h2> 导出函数</h2>\\n<p>编写要导出的函数时，需要使用特殊的关键字和修饰符来标识它们是动态库的导出函数。</p>\\n<p>例如，在Linux系统下，可以使用__attribute__((visibility(\\"default\\")))修饰符来标识：</p>","autoDesc":true}');export{e as data};
