import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as s,d as n}from"./app-18ea6252.js";const i={},t=n(`<h1 id="git不同分支代码的合并" tabindex="-1"><a class="header-anchor" href="#git不同分支代码的合并" aria-hidden="true">#</a> git不同分支代码的合并</h1><p>项目不同分支之间代码的合并是常用的操作。</p><p>假设要把branchA的代码合并到branchB，步骤如下：</p><p>（1）切换到branchB中，执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> merge branchA <span class="token parameter variable">--squash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>--squash 选项的含义是：不提交、不移动HEAD，因此需要一条额外的commit命令。效果相当于将原来分支上的多个commit合并成一个，放在当前分支上，原来的commit历史记录不合并过来（前提是分支的commit历史不重要）。</p><p>（2）提交合并后的代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;合并分支代码&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）将代码推送到远程仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),c=[t];function r(d,l){return e(),s("div",null,c)}const m=a(i,[["render",r],["__file","git不同分支代码的合并.html.vue"]]);export{m as default};
